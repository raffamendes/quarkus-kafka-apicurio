
mp.messaging.outgoing.appointment.topic=topic.register.tentative.appointment

#outgoing
mp.messaging.outgoing.appointment.apicurio.registry.auto-register=false
mp.messaging.outgoing.appointment.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.RecordIdStrategy
mp.messaging.outgoing.appointment.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
mp.messaging.outgoing.appointment.apicurio.registry.find-latest=true
mp.messaging.outgoing.appointment.connector=smallrye-kafka


#incoming
mp.messaging.incoming.appnt-consumer.topic=topic.register.tentative.appointment
#mp.messaging.incoming.appnt-consumer.value.deserializer=io.apicurio.registry.serde.avro.AvroKafkaDeserializer
#mp.messaging.incoming.appnt-consumer.apicurio.registry.use-specific-avro-reader=true
mp.messaging.incoming.appnt-consumer.connector=smallrye-kafka
mp.messaging.incoming.appnt-consumer.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.RecordIdStrategy
mp.messaging.incoming.appnt-consumer.apicurio.registry.find-latest=true

mp.messaging.connector.smallrye-kafka.apicurio.registry.url=${APICURIO_URL}

kafka.bootstrap.servers=${KAFKA_URL}


mp.messaging.connector.smallrye-kafka.security.protocol=SSL
mp.messaging.connector.smallrye-kafka.ssl.truststore.location=${JKS_LOCATION}
mp.messaging.connector.smallrye-kafka.ssl.truststore.password=password
mp.messaging.connector.smallrye-kafka.ssl.truststore.type=JKS

quarkus.devservices.enabled=false

quarkus.log.level=INFO
